name: Pylint Workflow

on:
  push:
    branches:
      - devops_code  # Change this to your main branch name if it's different
    paths:
      - '**.py'

jobs:
  pylint:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10.4"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # Use v2 for better compatibility

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2  # Use v2 for better compatibility
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Determine changed Python files
        id: changed_files
        run: |
          if git diff --quiet --exit-code origin/devops_code...HEAD -- '**.py'; then
            echo "No Python file changes detected."
            echo "changed_files=" >> $GITHUB_ENV
          else
            changed_files=($(git diff --name-only origin/devops_code...HEAD | grep '\.py$'))
            echo "Changed Python files detected: ${changed_files[@]}"
            echo "changed_files=${changed_files[*]}" >> $GITHUB_ENV
          fi

      - name: Run Pylint on changed files
        id: pylint_check
        run: |
          changed_files="${changed_files}"
          pylint_fail=false

          if [ -n "$changed_files" ]; then
            for file in $changed_files; do
              pylint "$file" > "$file.pylintrc" || true
              pylint_score=$(grep -oP '(?<=Your code has been rated at ).*(?=/10)' "$file.pylintrc")

              if (( $(echo "$pylint_score < 6" | bc -l) )); then
                echo "Pylint score is less than 6 for $file. Aborting."
                pylint_fail=true
              else
                echo "Pylint score for $file: $pylint_score"
              fi
            done
          fi

          if [ "$pylint_fail" = true ]; then
            exit 1
          fi
