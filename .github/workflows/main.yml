name: Pylint Workflow

on:
  push:
    branches:
      - '*'  # Change this to your main branch name if it's different
    paths:
      - '**.py'

jobs:
  pylint:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10.4"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # Use v2 for better compatibility

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2  # Use v2 for better compatibility
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
         fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: List Changed Python Files
        id: list_changed_files
        run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- '**.py')
          echo "::set-output name=changed_files::${changed_files}"
      - name: Determine the target branch
        run: |
               # Get the branch name from the ref
                target_branch="${{ github.ref }}"
                target_branch="${target_branch#refs/heads/}"

                if [ -z "$target_branch" ]; then
                     echo "Error: Could not determine the target branch. Exiting..."
                     exit 1
                fi

                echo "Target Branch: $target_branch"
                mkdir -p "$target_branch"
                touch ${branch_name}/$file
        shell: bash

     

      
      - name: Run Pylint and Store Score
        id: run_pylint
        run: |
          changed_files="${{ steps.list_changed_files.outputs.changed_files }}"
          threshold=0.1  # Set your desired threshold here
          if [ -n "$changed_files" ]; then
            pylint_fail=false
            for file in $changed_files; do
              
              pylint_score=$(pylint "$file" | grep 'Your code has been rated at' | awk '{print $7}' || echo "0")
              echo "Pylint score for $file: $pylint_score"
              if (( $(echo "$pylint_score >= $threshold" | bc -l) )); then
                 echo "Pylint score meets or exceeds the threshold for $file. Committing and pushing to GitHub."
                 # Use github.ref to get the branch name that triggered the workflow
                 branch_name=${{ github.ref }}
                 # Remove "refs/heads/" prefix to get the clean branch name
                 branch_name=${branch_name#refs/heads/}
                  # Create a report file with the Pylint score in the branch's directory
                 report_file="${branch_name}/${file}_pylint_report.txt"
                 echo "Pylint Score: $pylint_score" > "$report_file"

                 
                 
                # Perform the Git commit and push here
                 token=${{ secrets.ATF }}
                 git config user.name "GitHub Actions"
                 git config user.email "actions@github.com"
                 git add "${branch_name}/$file"
                 git commit -m "Auto-fix Pylint issues in $file"
                 git push --force origin devops_code
                 echo "Committed and pushed to GitHub."
              else
                 echo "Pylint score for $file is below the threshold. Skipping."
                 pylint_fail=true
                 # Create a report file with the Pylint score
                 report_file="${branch_name}/${file}_pylint_report.txt"
                 message="The threshold Value set for the code is :i.e 8/10"
                 echo "$message" >> "$report_file"
                 echo "Pylint Score: $pylint_score" >> "$report_file"
                 
                 
              fi
            done
      
            if [ "$pylint_fail" = true ]; then
              echo "At least one file has a Pylint score below the threshold. Aborting the workflow."
              exit 1
            else
              echo "No Python files have Pylint scores below the threshold."
            fi
          else
            echo "No Python files changed."
          fi

      - name: Upload Pylint Report
        if: success()
        run: |
          branch_name=${{ github.ref }}
          branch_name=${branch_name#refs/heads/}
          echo "## Pylint Report" > $branch_name/pylint_report.md
          echo "Threshold Value: 8.0" >> $branch_name/pylint_report.md
          git log -1 --pretty=format:"Last Commit: %h %s" >> $branch_name/pylint_report.md
          echo "Pylint workflow completed successfully." >> $branch_name/pylint_report.md
          echo "Commit SHA: ${{ github.sha }}" >> $branch_name/pylint_report.md
          echo "Branch: $branch_name" >> $branch_name/pylint_report.md
          echo "Author: ${{ github.actor }}" >> $branch_name/pylint_report.md
          echo "Reviewer: ${{ github.actor }}" >> $branch_name/pylint_report.md
          echo "Review URL: ${{ github.event.pull_request.html_url }}" >> $branch_name/pylint_report.md
          echo "::set-output name=pylint_report::${branch_name}/pylint_report.md"

      - name: Upload Pylint Report Artifact
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: pylint-report
          path: $branch_name/pylint_report.md
        
